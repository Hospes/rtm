buildscript {
    ext {
        minSdk = 28
        targetSdk = 33
        compileSdk = 33

        kotlin_version = '1.7.21'
        coreDesugaring = '2.0.0'

        androidx = [
                "core"      : '1.9.0',
                "activity"  : '1.6.1',
                "fragment"  : '1.6.0-alpha03',
                "appcompat" : '1.6.0-rc01',
                "room"      : '2.5.0-beta02',
                "lifecycle" : '2.6.0-alpha03',
                "navigation": '2.6.0-alpha01',
                "compose"   : '1.3.1',
                "review"    : '2.0.0',
                "work"      : '2.7.1',
                "hilt"      : '1.0.0',
                "constraint": '2.1.4',
        ]
        google = [
                "hilt"       : '2.44.2',
                "accompanist": '0.28.0',
                "material"   : '1.7.0',
        ]
        kotlinx = [
                "coroutines"   : '1.6.4',
                "serialization": '1.4.1'
        ]
        versions = [
                "timber": "5.0.1",
                "coil"  : '2.2.2',
        ]
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.0-rc01'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.gms:google-services:4.3.14"

        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.2'
        classpath 'com.google.firebase:firebase-appdistribution-gradle:3.1.1'

        classpath "com.google.dagger:hilt-android-gradle-plugin:${google.hilt}"
    }
}

subprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    // TODO: Remove when the Coroutine and Flow APIs leave experimental/internal/preview.
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'

            freeCompilerArgs += '-Xopt-in=androidx.compose.foundation.ExperimentalFoundationApi'

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
            freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.FlowPreview'
            freeCompilerArgs += '-Xopt-in=kotlin.Experimental'
        }
    }
}